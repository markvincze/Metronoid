

//------------------------------------------------------------------------------
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//------------------------------------------------------------------------------
#include "pch.h"
#include "DirectXPage.xaml.h"

using namespace Windows::Foundation;
using namespace Windows::UI::Xaml;
using namespace Windows::UI::Xaml::Controls;
using namespace Windows::UI::Xaml::Markup;
using namespace Metronoid;

void DirectXPage::InitializeComponent()
{
    if (_contentLoaded)
        return;

    _contentLoaded = true;

    // Call LoadComponent on ms-appx:///DirectXPage.xaml
    Windows::UI::Xaml::Application::LoadComponent(this, ref new Windows::Foundation::Uri(L"ms-appx:///DirectXPage.xaml"), Windows::UI::Xaml::Controls::Primitives::ComponentResourceLocation::Application);

    // Get the TextBlock named 'SimpleTextBlock'
    SimpleTextBlock = safe_cast<Windows::UI::Xaml::Controls::TextBlock^>(static_cast<Windows::UI::Xaml::IFrameworkElement^>(this)->FindName(L"SimpleTextBlock"));
    // Get the StackPanel named 'LeftPanel'
    LeftPanel = safe_cast<Windows::UI::Xaml::Controls::StackPanel^>(static_cast<Windows::UI::Xaml::IFrameworkElement^>(this)->FindName(L"LeftPanel"));
    // Get the StackPanel named 'RightPanel'
    RightPanel = safe_cast<Windows::UI::Xaml::Controls::StackPanel^>(static_cast<Windows::UI::Xaml::IFrameworkElement^>(this)->FindName(L"RightPanel"));
    // Get the Button named 'Next'
    Next = safe_cast<Windows::UI::Xaml::Controls::Button^>(static_cast<Windows::UI::Xaml::IFrameworkElement^>(this)->FindName(L"Next"));
    // Get the Button named 'Previous'
    Previous = safe_cast<Windows::UI::Xaml::Controls::Button^>(static_cast<Windows::UI::Xaml::IFrameworkElement^>(this)->FindName(L"Previous"));
}

void DirectXPage::Connect(int connectionId, Platform::Object^ target)
{
    switch (connectionId)
    {
    case 1:
        (safe_cast<Windows::UI::Xaml::UIElement^>(target))->PointerMoved +=
            ref new Windows::UI::Xaml::Input::PointerEventHandler(this, (void (DirectXPage::*)(Platform::Object^, Windows::UI::Xaml::Input::PointerRoutedEventArgs^))&DirectXPage::OnPointerMoved);
        (safe_cast<Windows::UI::Xaml::UIElement^>(target))->PointerReleased +=
            ref new Windows::UI::Xaml::Input::PointerEventHandler(this, (void (DirectXPage::*)(Platform::Object^, Windows::UI::Xaml::Input::PointerRoutedEventArgs^))&DirectXPage::OnPointerReleased);
        break;
    case 2:
        (safe_cast<Windows::UI::Xaml::Controls::Primitives::ButtonBase^>(target))->Click +=
            ref new Windows::UI::Xaml::RoutedEventHandler(this, (void (DirectXPage::*)(Platform::Object^, Windows::UI::Xaml::RoutedEventArgs^))&DirectXPage::CycleColorNext);
        break;
    case 3:
        (safe_cast<Windows::UI::Xaml::Controls::Primitives::ButtonBase^>(target))->Click +=
            ref new Windows::UI::Xaml::RoutedEventHandler(this, (void (DirectXPage::*)(Platform::Object^, Windows::UI::Xaml::RoutedEventArgs^))&DirectXPage::CycleColorPrevious);
        break;
    }
    (void)connectionId; // Unused parameter
    (void)target; // Unused parameter
    _contentLoaded = true;
}

